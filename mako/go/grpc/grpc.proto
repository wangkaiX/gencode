syntax = "proto3";

package ${proto_package};

service ${grpc_service_name} {
% for api in apis:
    // ${api.note}
    rpc ${gen_upper_camel(api.name)}(${api.req.type.name}) returns (${api.resp.type.name}){}

% endfor
}

% for node in nodes:
message ${node.type.name} {
    <% 
       members = []
       for member in node.fields + node.nodes:
           members.append(member)
       members.sort(key=lambda member:member.index)
    %>
    % for member in members:
<%
    if member.dimension > 0:
        repeated = 'repeated '
    else:
        repeated = ''
%>
    // ${member.note}
    ${repeated}${member.type.name} ${member.name}  = ${member.index};
    % endfor
}

% endfor

% for enum in enums:
enum ${enum.name} {
    % for i, value in zip(range(0, len(enum.values)), enum.values):
    ${value} = ${i};
    % endfor
}

% endfor
